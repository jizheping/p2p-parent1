<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jizheping.mapper.PaymentScheduleDetailMapper" >
  <resultMap id="BaseResultMap" type="com.jizheping.api.entity.PaymentScheduleDetail" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="bidAmount" property="bidAmount" jdbcType="DECIMAL" />
    <result column="bid_id" property="bidId" jdbcType="BIGINT" />
    <result column="totalAmount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="principal" property="principal" jdbcType="DECIMAL" />
    <result column="interest" property="interest" jdbcType="DECIMAL" />
    <result column="monthIndex" property="monthIndex" jdbcType="TINYINT" />
    <result column="deadline" property="deadline" jdbcType="TIMESTAMP" />
    <result column="bidRequest_id" property="bidRequestId" jdbcType="BIGINT" />
    <result column="payDate" property="payDate" jdbcType="TIMESTAMP" />
    <result column="returnType" property="returnType" jdbcType="TINYINT" />
    <result column="paymentSchedule_id" property="paymentScheduleId" jdbcType="BIGINT" />
    <result column="toLogininfo_id" property="toLogininfoId" jdbcType="BIGINT" />
    <association property="fromLogininfo" javaType="com.jizheping.api.entity.LoginInfo" columnPrefix="fi_">
	    <id column="id" property="id"/>
	    <result column="username" property="username"/>
    </association>
  </resultMap>
  
  <sql id="base_column">
  	 pd.id, pd.bidAmount, pd.bid_id, pd.totalAmount, pd.principal, pd.interest, pd.monthIndex, pd.deadline, 
    pd.bidRequest_id, pd.payDate, pd.returnType, pd.paymentSchedule_id, pd.toLogininfo_id ,
    fi.id as fi_id , fi.username as fi_username
  </sql>
  
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
    insert into paymentscheduledetail (bidAmount, bid_id, totalAmount, principal, interest, monthIndex, 
      deadline, bidRequest_id, payDate,  returnType, paymentSchedule_id, fromLogininfo_id, toLogininfo_id)
    values (#{bidAmount}, #{bidId}, #{totalAmount}, 
      #{principal}, #{interest}, #{monthIndex}, 
      #{deadline}, #{bidRequestId}, #{payDate}, 
      #{returnType}, #{paymentScheduleId}, #{fromLogininfo.id}, 
      #{toLogininfoId})
  </insert>
  

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select <include refid="base_column" />
    from paymentscheduledetail  pd join logininfo fi ON  pd.fromLogininfo_id = fi.id 
    where pd.id = #{id}
  </select>
  
  <select id="selectByPaymentSchedule" resultMap="BaseResultMap" >
   select <include refid="base_column" />
   from paymentscheduledetail  pd join logininfo fi ON  pd.fromLogininfo_id = fi.id 
    where pd.paymentSchedule_id = #{id}
  </select>

  <update id="updateByPrimaryKey" >
    update paymentscheduledetail
    set bidAmount = #{bidAmount},
        bid_id = #{bidId},
        totalAmount = #{totalAmount},
        principal = #{principal},
        interest = #{interest},
        monthIndex = #{monthIndex},
        deadline = #{deadline},
        bidRequest_id = #{bidRequestId},
        payDate = #{payDate},
        returnType = #{returnType},
        paymentSchedule_id = #{paymentScheduleId},
        fromLogininfo_id = #{fromLogininfo.id},
        toLogininfo_id = #{toLogininfoId}
    where id = #{id}
  </update>

  <select id="selectByLoginInfoId" resultMap="BaseResultMap">
      select <include refid="base_column" />
      from paymentscheduledetail  pd join logininfo fi ON  pd.fromLogininfo_id = fi.id
      where pd.toLogininfo_id = #{id}
  </select>
 
</mapper>